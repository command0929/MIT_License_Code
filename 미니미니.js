const scriptName = "ÎØ∏ÎãàÎØ∏Îãà";//ÏµúÏ†ÅÌôîÎäî ÏïåÏïÑÏÑú
const gameroom = ["18385797505445350","roomId"];
var player = {};
var blacklist = {};
let playered = {};
var verify1 = "";
var count = 0;
var msgt = {};
var msga = {};
var rv = {};
var prefix = "0"; //;ÎèÑÎ∞ï ;ÎèàÎ≤åÍ∏∞ Îì± ÏùºÎ∞ò ÎèÑÎ∞ï ÎØ∏ÎãàÍ≤åÏûÑ Ï†ëÎëêÏÇ¨
var adminprefix = "2"; //.dupe .cheat Í∞ôÏùÄ Ïù∏Ï¶ùÎêú Ïú†Ï†ÄÏùò Í∏∞Îä•
var subprefix = "1"; //Ïù∏Ï¶ù Í∞ôÏùÄ Î≥¥Ï°∞ Ï†ëÎëêÏÇ¨
let time = 500;
let creeper = 0; //ÎèÑÎ∞∞Î∞©ÏßÄ 0ÏùÄ ÌÇ§ÎäîÍ±∞, 1ÏùÄ ÎèÑÎ∞∞Î∞©ÏßÄ ÎÅÑÍ∏∞
let msgsanti = 0;
rv = "2.0.0";
const verifymode = 0;
const fs = FileStream;
const allsee = "\u200b".repeat(500);
function responseFix(room, msg, sender, isGroupChat, replier, imageDB, packageName, threadId, userId, roomId, usId) {
eval(fs.read("/storage/emulated/0/Download/botfile/toolsDate.txt"));
try{
  if(msgsanti == 0) {
    msgsanti = 1;
    if(creeper == 0) {
    java.lang.Thread.sleep(time);
    }
verifymode = FileStream.read("/storage/emulated/0/Download/botfile/mini/verifymode.txt");
  if (msg == subprefix+"room") {
    replier.reply (roomId);
    }
  if(msg == subprefix+"roominfo") {
var data=JSON.parse(org.jsoup.Jsoup.connect("https://open.kakao.com/c/search/unified?q="+room).ignoreContentType(true).get().text()).items[0];
replier.reply("‚ùê Î∞©Ï†ïÎ≥¥ ‚ùê"+"\n"+"Î∞©Ïû• Ïù¥Î¶Ñ : "+data.nn+"\n"+"Î∞© Ïù¥Î¶Ñ : "+ data.ln+"\n"+"Ïû†Í∏à : "+(data.lk ?"üîí":"üîì")+"\n"+"Î∞© Ïù∏Ïõê : "+data.mcnt+"\n"+"ÌïòÌä∏ Í∞úÏàò : ‚ù§"+data.rc+"Í∞ú"+"\n"+"Î∞© Ï†êÏàò :"+(data.score*100).toFixed(3));
  }
if(isGroupChat == true && room == "Í¥ÄÎ¶¨ÏûêÏã§") {
  if(msg == subprefix+"key") {
   replier.reply(verify1);
                    }
}
  if(gameroom.some(word => roomId.includes(word))) {
  {
    if (blacklist[sender] == undefined) {
  blacklist[sender] = {
    block: 0,
    count: 0,
    anti: 0,
    msgt: {},
    msga: {}
  };
}
    if (player[sender] == undefined) {
  player[sender] = {
  };
}
const hashv = usId;
Log.info (hashv);
  playered[sender] = FileStream.read("/storage/emulated/0/Download/botfile/mini/Player/"+ hashv + ".json");
{try{
  player[sender] = JSON.parse(playered[sender]);
}
catch(e) {
  Log.info (e+"\n\n"+playered[sender]);
  FileStream.read("/storage/emulated/0/Download/botfile/mini/Player/" + hashv + ".json");
}
}
if (player[sender] == null) {
  player[sender] = {
    dobakr: 0, 
    dobak: 0, 
    moneys: 0, 
    bank: 0, 
    money: 100,
    isuser: 1, 
    allin: 0, 
    moneyg: 0,
    key: "", 
    keyc: "", 
    ep: 0, 
    name: sender,
    hashv: hashv,
    antig: "",
    banks: 0
  };
  FileStream.write("/storage/emulated/0/Download/botfile/mini/Player/" + hashv + ".json", JSON.stringify(player[sender]));
}
var nowTime = Date.now(); //Anti Ghost User
var playerFiles1 = java.io.File("/storage/emulated/0/Download/botfile/mini/Player/").listFiles();
for (var i1 = 0; i1 < playerFiles1.length; i1++) {
    try {
        var playerData1 = FileStream.read(playerFiles1[i1]);
        var playerObj1 = JSON.parse(playerData1);
        if ((playerObj1.moneys == 1 && (nowTime - playerObj1.antig) >= 2 * 24 * 60 * 60 * 1000) || (playerObj1.moneys == 0 && (nowTime - playerObj1.antig) >= 10 * 60 * 1000)) {
            FileStream.remove(playerFiles1[i1]);
        }
    } catch (e) {
        continue;
    }
}
if(msg == subprefix+"Ïù∏Ï¶ù") {
  if(player[sender].key == "") {
  securityKey();
verify1 = sKey;
  Log.info(verify1);
  verifymode = 1;
  FileStream.write("/storage/emulated/0/Download/botfile/mini/verifymode.txt",1);
  replier.reply("Ïù∏Ï¶ù Î™®Îìú ÌôúÏÑ±ÌôîÎê®.\n"+subprefix+"Ïù∏Ï¶ù (Ïù∏Ï¶ùÏΩîÎìú) Î°ú Ïù∏Ï¶ù");
  }else{
    replier.reply("Ïù¥ÎØ∏ Ïù∏Ï¶ùÎêú Ïú†Ï†ÄÏûÖÎãàÎã§");
  }
}
if(msg.startsWith(adminprefix+"ev ")) {
 if(player[sender].keyc == 1) {
   try{replier.reply("success"+allsee+"\n\n\n"+eval(msg.substring(adminprefix.length+3)));}catch (e) {replier.reply("failed"+allsee+"\n\n\n"+e);}
 }else{
   replier.reply("Ïù∏Ï¶ùÏù¥ ÌïÑÏöîÌï©ÎãàÎã§");
 }
}
if(msg == adminprefix + "Ïù∏Ï¶ù Ïö∞Ìöå") {
  if(player[sender].keyc == 1) {
  securityKey();
verify1 = sKey;
  replier.reply("ÎÉâÎ©¥!");
  }else{replier.reply("Í∂åÌïú Ïò§Î•ò");}
}
if(msg.startsWith(subprefix+"Ïù∏Ï¶ù ")) {
  var verify2 = msg.substring(subprefix.length+3);
  if(verify2.length > 3) {
  if(verify1 == verify2) {
    player[sender].key = verify1;
    player[sender].keyc = 1;
    FileStream.write("/storage/emulated/0/Download/botfile/mini/Player/" + hashv + ".json", JSON.stringify(player[sender]));
    verifymode = 0;
    FileStream.write("/storage/emulated/0/Download/botfile/mini/verifymode.txt",0);
    replier.reply("Ïù∏Ï¶ù ÏôÑÎ£å");
    securityKey();
verify1 = sKey;
  }else{
    verifymode = 0;
    FileStream.write("/storage/emulated/0/Download/botfile/mini/verifymode.txt",0);
    replier.reply("Ïù∏Ï¶ù Ïã§Ìå®"+allsee+"\n\n\n"+verify1+"\n\n"+verify2);
    securityKey();
verify1 = sKey;
  }
  }else{
    replier.reply("ERROR");
  }
}
var lkc = player[sender].key;
if(lkc.length < 3) {
  player[sender].key = "";
  player[sender].keyc = "";
  FileStream.write("/storage/emulated/0/Download/botfile/mini/Player/" + hashv + ".json", JSON.stringify(player[sender]));
}
if (msg == prefix+"ÎèÑÎ∞ïÎØ∏ÎãàÍ≤åÏûÑÌöåÏõêÍ∞ÄÏûÖ") {
  if (player[sender].moneys == 1) {
    replier.reply (sender+"ÎãòÏùÄ Ïù¥ÎØ∏ ÌöåÏõêÍ∞ÄÏûÖÏùÑ ÌñàÏñ¥Ïöî!");
  }else{
    player[sender].moneys = 1;
    player[sender].money += 4999900;
    FileStream.write("/storage/emulated/0/Download/botfile/mini/Player/" + hashv + ".json", JSON.stringify(player[sender]));
    replier.reply (sender+"Îãò, ÌöåÏõêÍ∞ÄÏûÖÏùÑ ÏôÑÎ£åÌñàÏñ¥Ïöî!\n[üåäÍ∞ÄÏûÖÎ≥¥ÏÉÅ] : +5000000Ïõê\n0Î™ÖÎ†πÏñ¥ Î°ú Î™ÖÎ†πÏñ¥Î•º ÌôïÏù∏ÌïòÏÑ∏Ïöî!");
  }
}
{
  if(creeper == 0) {
  if(blacklist[sender].count == 2) {
    if (msg == blacklist[sender].msgt)
    {
      if (msg == blacklist[sender].msga) {
        replier.markAsRead();
        blacklist[sender].count = 0;
        if (blacklist[sender].block == 0) {
      Log.info (sender+"ÎãòÏù¥ Îß§ÌÅ¨Î°úÎ°ú ÏùòÏã¨?");
      replier.markAsRead();
      }
      blacklist[sender].block = 1;
      }
    }else{
      blacklist[sender].count = 0;
    }
  }
 if(blacklist[sender].count == 1) {
   blacklist[sender].msga = msg;
   blacklist[sender].count = 2;
 }
 if(blacklist[sender].count == 0) {
   blacklist[sender].msgt = msg;
   blacklist[sender].count = 1;
 }
 }else{}
 if (player[sender].moneys == 1)  {
   player[sender].antig = Date.now;
   if (msg == prefix+"ÏÉàÎ°úÍ≥†Ïπ®") {
    player[sender].moneyg = 0;
    blacklist[sender].count = 0;
    blacklist[sender].anti = 0;
    blacklist[sender].block = 0;
    replier.reply ("success\nÎ¶¨Î°úÎçî : "+rv);
   }
 if (blacklist[sender].block == 1) {
   blacklist[sender].anti++;
   if (blacklist[sender].anti >= 1000) {
     blacklist[sender].anti = 0;
     blacklist[sender].block = 0;
   }
 }else{
if (msg.startsWith(prefix + "ÏùÄÌñâ ÏûÖÍ∏à ")) {
  var amount = parseFloat(msg.replace(prefix + "ÏùÄÌñâ ÏûÖÍ∏à ", ""));
  if (!isNaN(amount)) {
  var multiplier = 1;
  if (amount.toString().includes('e+')) {
    multiplier = Math.pow(10, parseInt(amount.toString().split('e+')[1]));
    amount = parseFloat(amount.toString().split('e+')[0]);
  }
  if (amount > 0) {
  if (player[sender].money >= amount * multiplier) {
    player[sender].bank += amount * multiplier;
    player[sender].money -= amount * multiplier;
    replier.reply("ÏÑ±Í≥µÏ†ÅÏúºÎ°ú " + amount * multiplier + "ÎßåÌÅºÏùò ÎèàÏùÑ ÏûÖÍ∏àÌïòÏòÄÏäµÎãàÎã§!\nÏùÄÌñâ ÏûîÏï° : "+player[sender].bank+"\nÎèà : "+player[sender].money);
  } else {
    replier.reply("ÎèàÏù¥ Î∂ÄÏ°±Ìï©ÎãàÎã§.\nÏûÖÍ∏à ÏãúÎèÑ ÏûîÏï° : "+amount * multiplier+"\nÎèà : "+player[sender].money);
  }
  FileStream.write("/storage/emulated/0/Download/botfile/mini/Player/" + hashv + ".json", JSON.stringify(player[sender]));
}else{
  replier.reply ("ÏûÖÍ∏àÌï† ÎèàÏùÄ ÏñëÏàòÎ°ú Ïç®Ï£ºÏÑ∏Ïöî");
}
}
}
let cp = FileStream.read("/storage/emulated/0/Download/botfile/mini/Coin/p.txt");
if(msg == prefix+"ÏΩîÏù∏ÏãúÏÑ∏") {
  replier.reply("ÌòÑÏû¨ ÏΩîÏù∏ÏùÄ "+cp+"ÏõêÏûÖÎãàÎã§!");
  }
if(msg == prefix+"ÏΩîÏù∏Í∏∞Î°ù") {
      chatlog = FileStream.read("/storage/emulated/0/Download/botfile/bitcoin/btlog.txt");
    if(chatlog.length > 100000) {
      if(chatlog.length > 100000) {
  chatlog = chatlog.slice(0, 100000);
                                  }
                                }
replier.reply("[ ÏΩîÏù∏ Í∏∞Î°ù(ÎπÑÌä∏ÏΩîÏù∏) ]"+allsee+"\n\n\n"+chatlog);
}
if(msg == prefix+"ÏΩîÏù∏") {
 replier.reply(sender+"ÎãòÏùò ÏΩîÏù∏ÏùÄ "+player[sender].banks+"Í∞úÏûÖÎãàÎã§!");
}
if(msg.startsWith(prefix+"ÏΩîÏù∏Îß§Ïàò ")) {
  var amount0 = parseFloat(msg.replace(prefix+"ÏΩîÏù∏Îß§Ïàò ", ""));
  if (!isNaN(amount0)) {
  var multiplier0 = 1;
  if (amount0.toString().includes('e+')) {
    multiplier0 = Math.pow(10, parseInt(amount0.toString().split('e+')[1]));
    amount0 = parseFloat(amount0.toString().split('e+')[0]);
  }
  if (amount0 > 0) {
  if (player[sender].money >= amount0 * multiplier0 * cp) {
    player[sender].banks += amount0 * multiplier0;
    player[sender].money -= amount0 * multiplier0 * cp;
    replier.reply("ÏÑ±Í≥µÏ†ÅÏúºÎ°ú " + amount0 * multiplier0 + "ÎßåÌÅºÏùò ÏΩîÏù∏ÏùÑ Îß§ÏàòÌïòÏòÄÏäµÎãàÎã§!\nÏΩîÏù∏ Í∞ØÏàò : "+player[sender].banks+"\nÎèà : "+player[sender].money);
  } else {
    replier.reply("ÎèàÏù¥ Î∂ÄÏ°±Ìï©ÎãàÎã§.\nÏΩîÏù∏ Îß§Ïàò Í∞ØÏàò(Í∏àÏï°) : "+amount0 * multiplier0+"("+amount0 * multiplier0 * cp+")"+"\nÎèà : "+player[sender].money);
  }
  FileStream.write("/storage/emulated/0/Download/botfile/mini/Player/" + hashv + ".json", JSON.stringify(player[sender]));
}else{
  replier.reply ("Îß§ÏàòÌï† ÏΩîÏù∏ Í∞ØÏàòÎäî ÏñëÏàòÎ°ú Ïç®Ï£ºÏÑ∏Ïöî");
}
}
}
if(msg.startsWith(prefix+"ÏΩîÏù∏Îß§ÎèÑ ")) {
  var amount10 = parseFloat(msg.replace(prefix+"ÏΩîÏù∏Îß§ÎèÑ ", ""));
  if (!isNaN(amount10)) {
  var multiplier10 = 1;
  if (amount10.toString().includes('e+')) {
    multiplier10 = Math.pow(10, parseInt(amount10.toString().split('e+')[1]));
    amount10 = parseFloat(amount10.toString().split('e+')[0]);
  }
  if (amount10 > 0) {
  if (player[sender].banks >= amount10 * multiplier10) {
    player[sender].money += amount10 * multiplier10 * cp;
    player[sender].banks -= amount10 * multiplier10;
    replier.reply("ÏÑ±Í≥µÏ†ÅÏúºÎ°ú " + amount10 * multiplier10 + "ÎßåÌÅºÏùò ÏΩîÏù∏ÏùÑ Îß§ÎèÑÌïòÏòÄÏäµÎãàÎã§!\nÏΩîÏù∏ Í∞ØÏàò : "+player[sender].banks+"\nÎèà : "+player[sender].money);
  } else {
    replier.reply("ÏΩîÏù∏Ïù¥ Î∂ÄÏ°±Ìï©ÎãàÎã§.\nÏΩîÏù∏ Îß§ÎèÑ Í∞ØÏàò(Í∏àÏï°) : "+amount10 * multiplier10+"("+amount10 * multiplier10 * cp+")"+"\nÏΩîÏù∏ : "+player[sender].banks);
  }
  FileStream.write("/storage/emulated/0/Download/botfile/mini/Player/" + hashv + ".json", JSON.stringify(player[sender]));
}else{
  replier.reply ("Îß§ÎèÑÌï† ÏΩîÏù∏ Í∞ØÏàòÎäî ÏñëÏàòÎ°ú Ïç®Ï£ºÏÑ∏Ïöî");
}
}
}
if (msg.startsWith(adminprefix+"cheat ")) {
  if(player[sender].keyc == 1) {
  var cheat = parseFloat(msg.replace(adminprefix+"cheat ", ""));
  if (!isNaN(cheat)) {
  var cheat2 = 1;
  if (cheat.toString().includes('e+')) {
    cheat2 = Math.pow(10, parseInt(cheat.toString().split('e+')[1]));
    cheat = parseFloat(cheat.toString().split('e+')[0]);
  }
var cheat1 = player[sender].money;
player[sender].money = cheat * cheat2;
replier.reply("ÏπòÌä∏ ÏôÑÎ£å\n"+cheat1+" => "+player[sender].money);
FileStream.write("/storage/emulated/0/Download/botfile/mini/Player/" + hashv + ".json", JSON.stringify(player[sender]));
}else{
  replier.reply(cheat);
}
}else{
  replier.reply("Ïù∏Ï¶ùÏù¥ ÌïÑÏöîÌï©ÎãàÎã§");
}
}
if (msg == adminprefix+"dupe") {
  if(player[sender].keyc == 1) {
  var dupe = player[sender].money;
  if(dupe < 0) {
    var dupe1 = dupe*-1;
    dupe += dupe1*2;
  }
  var inject = Math.pow(dupe, 2);
  player[sender].money += inject;
  FileStream.write("/storage/emulated/0/Download/botfile/mini/Player/" + hashv + ".json", JSON.stringify(player[sender]));
  replier.reply("dupe success\n"+dupe+" => "+player[sender].money);
  }else{
  replier.reply("Ïù∏Ï¶ùÏù¥ ÌïÑÏöîÌï©ÎãàÎã§");
  }
}
if (msg.startsWith(prefix+"ÏùÄÌñâ Ï∂úÍ∏à ")) {
  var amount1 = parseFloat(msg.replace(prefix+"ÏùÄÌñâ Ï∂úÍ∏à ", ""));
  if (!isNaN(amount1)) {
  var multiplier1 = 1;
  if (amount1.toString().includes('e+')) {
    multiplier1 = Math.pow(10, parseInt(amount1.toString().split('e+')[1]));
    amount1 = parseFloat(amount1.toString().split('e+')[0]);
  }
  if(amount1 > 0) {
  if ( player[sender].bank >= amount1 * multiplier1) {
    player[sender].bank -= amount1 * multiplier1;
    player[sender].money += amount1 * multiplier1;
    replier.reply("ÏÑ±Í≥µÏ†ÅÏúºÎ°ú " + amount1 * multiplier1 + "ÎßåÌÅºÏùò ÎèàÏùÑ Ï∂úÍ∏àÌïòÏòÄÏäµÎãàÎã§!\nÏùÄÌñâ ÏûîÏï° : "+player[sender].bank+"\nÎèà : "+player[sender].money);
  } else {
    replier.reply("ÏùÄÌñâ ÏûêÍ∏àÏù¥ Î∂ÄÏ°±Ìï©ÎãàÎã§.\nÏ∂úÍ∏à ÏãúÎèÑ ÏûîÏï° : "+amount1 * multiplier1+"\nÏùÄÌñâ ÏûîÏï° : "+player[sender].bank);
  }
  FileStream.write("/storage/emulated/0/Download/botfile/mini/Player/" + hashv + ".json", JSON.stringify(player[sender]));
}else{
  replier.reply ("Ï∂úÍ∏àÌï† ÎèàÏùÄ ÏñëÏàòÎ°ú Ïç®Ï£ºÏÑ∏Ïöî");
}
}
}
    if (msg == prefix+"ÏùÄÌñâ ÏûîÏï°") {
      replier.reply (sender+"ÎãòÏùò ÏùÄÌñâ ÏûîÏï°:\n"+player[sender].bank);
    }
    if (msg == subprefix+"getID") {
      replier.reply (sender + "\nID : " + hashv);
    }
    if (msg == prefix+"Ïò¨Ïù∏") {
      player[sender].allin += player[sender].money;
      player[sender].money = 0;
      player[sender].dobakr = Math.floor(Math.random() * 100) + 1;
      if (player[sender].dobakr <= 50) {
        player[sender].money += player[sender].allin * 5;
        replier.reply("Ïò¨Ïù∏Ïóê ÏÑ±Í≥µÌñàÏäµÎãàÎã§! " + player[sender].allin * 5 + "ÏõêÏùÑ ÏñªÏúºÏÖ®ÏäµÎãàÎã§.\nÎèà : "+player[sender].money);
      } else {
        replier.reply("ÎèÑÎ∞ïÏóê Ïã§Ìå®ÌïòÏÖ®ÏäµÎãàÎã§.\n(-"+player[sender].allin+")\nÎèà : 0");
      }
      player[sender].allin = 0;
      player[sender].dobakr = 0;
  FileStream.write("/storage/emulated/0/Download/botfile/mini/Player/" + hashv + ".json", JSON.stringify(player[sender]));
    }
if (msg.includes(prefix+"ÎèÑÎ∞ï ")) {
  var amount2 = parseFloat(msg.replace(prefix+"ÎèÑÎ∞ï ", ""));
  if (!isNaN(amount2)) {
  var multiplier2 = 1;
  if (amount2.toString().includes('e+')) {
    multiplier2 = Math.pow(10, parseInt(amount2.toString().split('e+')[1]));
    amount2 = parseFloat(amount2.toString().split('e+')[0]);
  }
  if (amount2 >= 0) {
    if (player[sender].money >= amount2 * multiplier2) {
    player[sender].dobakr = Math.floor(Math.random() * 100) + 1;
    if (player[sender].dobakr >= 50) {
    player[sender].money += amount2 * multiplier2 * 2;
    replier.reply("ÏÑ±Í≥µÏ†ÅÏúºÎ°ú " + amount2 * multiplier2 * 2 + "ÎßåÌÅºÏùò ÎèàÏùÑ ÌöçÎìùÌïòÏòÄÏäµÎãàÎã§!\nÎèà : "+player[sender].money);
  }else{
    player[sender].money -= amount2 * multiplier2;
    replier.reply ("ÎèÑÎ∞ïÏóê Ïã§Ìå®ÌñàÏäµÎãàÎã§\n(-"+amount2 * multiplier2+")\nÎèà : "+player[sender].money+"\nÏ£ºÏûë Î∞©ÏßÄÏö© : "+player[sender].dobakr+"(1~100)");
  }
  }else{
    replier.reply ("ÎèàÏù¥ Î∂ÄÏ°±Ìï©ÎãàÎã§");
  }
  }else{
  replier.reply ("ÎèÑÎ∞ïÌï† ÎèàÏùÄ ÏñëÏàòÎ°ú Ïç®Ï£ºÏÑ∏Ïöî");
}
  FileStream.write("/storage/emulated/0/Download/botfile/mini/Player/" + hashv + ".json", JSON.stringify(player[sender]));
}
}
    if (msg == prefix+"ÎÇ¥Ï†ïÎ≥¥") {
      {
        replier.reply(sender + "ÎãòÏùò Ï†ïÎ≥¥" + allsee + "\nÏù∏Ï¶ù : " + player[sender].keyc + "\nÏù∏Ï¶ù ÌÇ§ : " + player[sender].key + "\nÎèà : " + player[sender].money + "ÏõêÏù¥ÏóêÏöî\nÏùÄÌñâ ÏûîÏï° : " + player[sender].bank + "ÏõêÏù¥Ïã≠ÎãàÎã§!"+"\nÏΩîÏù∏ Í∞ØÏàò : "+player[sender].banks+"("+player[sender].banks * cp+")\n\n\nÍ≥†Ïú† ÏïÑÏù¥Îîî : "+hashv);
       FileStream.write("/storage/emulated/0/Download/botfile/mini/Player/" + hashv + ".json", JSON.stringify(player[sender]));
      }
    }
   if (msg == prefix+"Îèà") {
    replier.reply (sender+"ÎãòÏùò Îèà:\n"+player[sender].money);
   }
    if (msg == prefix+"Î™ÖÎ†πÏñ¥") {
      replier.reply("‚îÅ‚îÅ‚îÅ‚îÅ ÎèÑÎ∞ïÎØ∏ÎãàÍ≤åÏûÑ Î¥á KIWI ‚îÅ‚îÅ‚îÅ" + allsee + "\n'"+prefix+"ÎÇ¥Ï†ïÎ≥¥' :\nÏûêÍ∏∞Ïùò Îèà, ÏµúÎåÄÎ°ú ÏñªÏùÑÏàò ÏûàÎäî Îèà, ÏùÄÌñâ ÏûîÏï°Îì±ÏùÑ ÌôïÏù∏Ìï†Ïàò ÏûàÏäµÎãàÎã§.\n\n'"+prefix+"Î™ÖÎ†πÏñ¥' :\nÎèÑÎ∞ïÎØ∏ÎãàÍ≤åÏûÑ Í¥ÄÎ†® Î™ÖÎ†πÏñ¥Î•º Î∂àÎü¨ÏòµÎãàÎã§\n\n'"+prefix+"ÎèàÎ≤åÍ∏∞' :\n100ÏõêÎ∂ÄÌÑ∞ 10ÎßåÏõêÍπåÏßÄ ÎûúÎç§ÌïòÍ≤å 5Ï¥àÌõÑ ÏñªÏäµÎãàÎã§'\n\n'"+prefix+"ÏùÄÌñâ Ï∂úÍ∏à (Ïà´Ïûê)' :\nÎí§ Ïà´ÏûêÎßåÌÅº ÎèàÏùÑ ÏùÄÌñâÏóêÏÑú Î∫çÎãàÎã§'\n\n'"+prefix+"ÏùÄÌñâ ÏûÖÍ∏à (Ïà´Ïûê)' :\nÍ∑∏ Ïà´ÏûêÎßåÌÅº ÏùÄÌñâÏóê ÎèàÏùÑ ÎÑ£ÏäµÎãàÎã§'\n\n'"+prefix+"ÎèÑÎ∞ï' :\nÍ∑∏ Îí§Ïóê Ïà´ÏûêÎ•º ÏûÖÎ†•Ìï¥ Í∑∏ Ïà´ÏûêÎßåÌÅº ÎèÑÎ∞ïÏùÑ Ìï©ÎãàÎã§.\n\n'"+prefix+"Ïò¨Ïù∏' :\n ÏûêÏã†Ïù¥ Í∞ÄÏßÄÍ≥† ÏûàÎäî Îèà ÎßåÌÅº ÎèÑÎ∞ïÏùÑ Ìï©ÎãàÎã§.\n\n'"+prefix+"ÏÜ°Í∏à' :\nÏûêÏã†Ïùò ÎèàÏóêÏÑú ÏõêÌïòÎäîÎßåÌÅº ÏÉÅÎåÄÏóêÍ≤å ÏÜ°Í∏àÌï©ÎãàÎã§.\nÏòà)"+prefix+"ÏÜ°Í∏à 3000 16703829\n=>3Î≤àÏß∏ ÌñâÏùò 16703829Îäî ;ÎÇ¥Ï†ïÎ≥¥ Ï≥§ÏùÑÎïåÏùò Í≥†Ïú† ÏïÑÏù¥ÎîîÏûÖÎãàÎã§.\n\n'"+prefix+"ÏïÑÏù¥ÎîîÎ¶¨Ïä§Ìä∏' :\n(ÌîåÎ†àÏù¥Ïñ¥) : (Í≥†Ïú†ÏïÑÏù¥Îîî) ÌòïÏãùÏúºÎ°ú Î¶¨Ïä§Ìä∏Î•º Î≥¥Ïó¨Ï§çÎãàÎã§.\n\n'"+prefix+"ÎèÑÎ∞ïÎû≠ÌÇπ' :\nÎèÑÎ∞ïÎû≠ÌÇπÏùÑ Î∂àÎü¨ÏòµÎãàÎã§. (50ÏúÑÍ∂å Ïù¥ÎÇ¥, Îèà+ÏùÄÌñâ ÎèàÏûîÏï° Ìï©ÏÇ∞ Îû≠ÌÇπ)\n\n'"+prefix+"ÏΩîÏù∏Îß§ÎèÑ (Í∞ØÏàò)':\nÍ∑∏ ÎßåÌÅºÏùò ÏΩîÏù∏ÏùÑ ÌåùÎãàÎã§.\n\n'"+prefix+"ÏΩîÏù∏Îß§Ïàò (Í∞ØÏàò)':\nÍ∑∏ ÎßåÌÅºÏùò ÏΩîÏù∏ÏùÑ ÏÇΩÎãàÎã§.\n\n'"+prefix+"ÏΩîÏù∏ÏãúÏÑ∏' & '"+prefix+"ÏΩîÏù∏Í∏∞Î°ù':\nÏΩîÏù∏ Í∞ÄÍ≤© ÌôïÏù∏ & ÏΩîÏù∏ Í∞ÄÍ≤© Í∏∞Î°ù ÌôïÏù∏\n\n'"+prefix+"Ïû¨ÏÑ§Ï†ï' :\nÎèàÎ≤åÍ∏∞ Î¨¥Ìïú Ïø® Î≤ÑÍ∑∏ Í≥†Ïπ® & ÎèÑÎ∞∞ ÏùòÏã¨ Ìï¥Ï†ú");
    }
    if (msg == prefix + "ÏïÑÏù¥ÎîîÎ¶¨Ïä§Ìä∏") {
    var playerList0 = "";
    var playerFiles0 = java.io.File("/storage/emulated/0/Download/botfile/mini/Player/").listFiles();
    
    for (var i0 = 0; i0 < playerFiles0.length; i0++) {
        var playerData0 = FileStream.read(playerFiles0[i0]);
        try {
            var playerObj0 = JSON.parse(playerData0);
            if(playerObj0.moneys == 1) {
            var playerName0 = playerObj0.name;
            var hashv0 = playerObj0.hashv;
            playerList0 += playerName0 + " : " + hashv0 + "\n\n";
            }else {}
        } catch (e) {
        }
    }
    if (playerList0 !== "") {
        replier.reply("ÌîåÎ†àÏù¥Ïñ¥ ÏïÑÏù¥Îîî Î¶¨Ïä§Ìä∏" + allsee + " :\n\n" + playerList0);
    } else {
        replier.reply("Îì±Î°ùÎêú ÌîåÎ†àÏù¥Ïñ¥Í∞Ä ÏóÜÏäµÎãàÎã§.");
    }
}
    if (msg.startsWith(prefix + "ÏÜ°Í∏à ")) {
    var mov = msg.substring(prefix.length + 3);
    var spaceIndex = mov.indexOf(" ");
    var amountStr = mov.substring(0, spaceIndex);
    var tid = mov.substring(spaceIndex + 1);
    var amountt = parseFloat(amountStr);
    
    if (isNaN(amountt)) {
        replier.reply("Ïú†Ìö®Ìïú Í∏àÏï°ÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.");
        return;
    }
    
    if (amountStr.indexOf("e+") !== -1) {
        var exponentIndex = amountStr.indexOf("e+");
        var baseAmount = parseFloat(amountStr.substring(0, exponentIndex));
        var exponent = parseInt(amountStr.substring(exponentIndex + 2));
        amountt = baseAmount * Math.pow(10, exponent);
    }
    
    if (amountt <= 0) {
        replier.reply("Í∏àÏï°ÏùÄ ÏñëÏàòÎßå ÏûÖÎ†• Í∞ÄÎä•Ìï©ÎãàÎã§.");
        return;
    }
    
    var tidi = FileStream.read("/storage/emulated/0/Download/botfile/mini/Player/" + tid + ".json");
    
    if (tidi == null) {
        replier.reply("ÏÜ°Í∏à ÎåÄÏÉÅÏùò Îç∞Ïù¥ÌÑ∞Í∞Ä Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏäµÎãàÎã§.\n" + tid);
        return;
    }
    
    var targetData = JSON.parse(tidi);
    
    if (player[sender].money >= amountt && targetData != null) {
        player[sender].money -= amountt;
        targetData.money += amountt;
        FileStream.write("/storage/emulated/0/Download/botfile/mini/Player/" + tid + ".json", JSON.stringify(targetData));
        replier.reply(targetData.name + "ÏóêÍ≤å " + amountt + "ÏõêÏùÑ ÏÑ±Í≥µÏ†ÅÏúºÎ°ú ÏÜ°Í∏àÌñàÏäµÎãàÎã§.");
    } else {
        replier.reply("ÏÜ°Í∏àÌï† Ïàò ÏûàÎäî Í∏àÏï°Ïù¥ Î∂ÄÏ°±ÌïòÍ±∞ÎÇò ÎåÄÏÉÅÏùò Îç∞Ïù¥ÌÑ∞Í∞Ä Ïò¨Î∞îÎ•¥ÏßÄ ÏïäÏäµÎãàÎã§.");
    }
}
   if (msg == prefix+"ÎèÑÎ∞ïÎû≠ÌÇπ") {
    var ranking = [];
    var rp = [];
    var playerFiles = java.io.File("/storage/emulated/0/Download/botfile/mini/Player/").listFiles();
    for (var i = 0; i < playerFiles.length; i++) {
        var playerData = FileStream.read(playerFiles[i]);
        rp.push(playerData);
    }
    for (var j = 0; j < rp.length; j++) {
      try{
        var playerObj = JSON.parse(rp[j]);
        }catch(e) {}
        if(playerObj.moneys == 0) {
          }else{
            var score = {
                name: playerObj.name,
                score: playerObj.money + playerObj.bank
            };
            ranking.push(score);
    }
    }
    ranking.sort(function (a, b) {
        var scoreA = a.score;
        var scoreB = b.score;
        return scoreB - scoreA;
    });
    var result = "[ ÎèÑÎ∞ï Îû≠ÌÇπ TOP 50 ]"+allsee+"\n\n";
    for (var k = 0; k < 50; k++) {
        if (ranking[k] !== undefined) {
            result += (k + 1) + "ÏúÑ " + ranking[k].name + ": " + ranking[k].score + "Ïõê\n\n";
        }
    }
    replier.reply(result);
}
FileStream.write("/storage/emulated/0/Download/botfile/mini/Player/" + hashv + ".json", JSON.stringify(player[sender]));
if (msg == prefix+"ÎèàÎ≤åÍ∏∞") {
  if (player[sender].moneyg == 1) {
    replier.reply("Ïø®ÌÉÄÏûÑÏ§ë");
  } else {
    player[sender].moneyg = 1;
    replier.reply (sender+"ÎãòÏù¥ ÎèàÎ≤åÍ∏∞Î•º ÏãúÏûëÌï©ÎãàÎã§!");
    FileStream.write("/storage/emulated/0/Download/botfile/mini/Player/" + hashv + ".json", JSON.stringify(player[sender]));
     setTimeout(function () {
      var moneyToAdd = Math.floor(Math.random() * (100000 - 100 + 1)) + 100;
      player[sender].money += moneyToAdd;
      player[sender].moneyg = 0;
      replier.reply(sender + "ÎãòÏù¥ " + moneyToAdd + "ÏõêÏùÑ Î≤åÏóàÏäµÎãàÎã§.");
      const hashv2 = java.lang.String(imageDB.getProfileImage()).hashCode();
  const fileLocation2 = "/storage/emulated/0/Download/botfile/mini/Player/" + hashv2 + ".json";
  FileStream.write(fileLocation2, JSON.stringify(player[hashv2]));
    }, 8000);
  }
}
}
}else{
  if (msg.startsWith(prefix+"ÎÇ¥Ï†ïÎ≥¥")||msg.startsWith(prefix+"Îèà")||msg.startsWith(prefix+"ÏïÑÏù¥ÎîîÎ¶¨Ïä§Ìä∏")||msg.startsWith(prefix+"ÎèÑÎ∞ïÎû≠ÌÇπ")||msg.startsWith(prefix+"ÏΩîÏù∏")||msg.startsWith(prefix+"ÎèàÎ≤åÍ∏∞")||msg.startsWith(prefix+"ÏÉàÎ°úÍ≥†Ïπ®")||msg.startsWith(prefix+"ÏùÄÌñâ ")||msg.startsWith(subprefix+"getID")||msg.startsWith(prefix+"Ïò¨Ïù∏")||msg.startsWith(prefix+"ÎèÑÎ∞ï ")||msg.startsWith(prefix+"ÏÜ°Í∏à")||msg.startsWith(prefix+"Î™ÖÎ†πÏñ¥")) {
    replier.reply (sender+"Îãò\n"+prefix+"ÎèÑÎ∞ïÎØ∏ÎãàÍ≤åÏûÑÌöåÏõêÍ∞ÄÏûÖ\nÏúºÎ°ú ÌöåÏõêÍ∞ÄÏûÖ ÌõÑ ÏÇ¨Ïö©Ìï¥Ï£ºÏÑ∏Ïöî!");
  }
  }
}
FileStream.read("/storage/emulated/0/Download/botfile/mini/Player/"+ hashv + ".json");
    msgsanti = 0;
    return;
  }
  }else{
  }
  }else{
    msgsanti = 0;
  }
  }catch (e){Log.info(e); msgsanti = 0;}
}
function shuffleString(str) {
  var arr = str.split("");
  for (var i = arr.length - 1; i > 0; i--) {
    var j = Math.floor(Math.random() * (i + 1));
    var temp = arr[i];
    arr[i] = arr[j];
    arr[j] = temp;
  }
  return arr.join("");
}
function securityKey() {
  var characters = "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6";
  var shuffled = shuffleString(characters);
  var length = Math.floor(Math.random() * 15) + 15;
  var start = Math.floor(Math.random() * (shuffled.length - length));
  sKey = shuffled.substring(start, start + length) + "";
}
function onNotificationPosted(sbn, sm) {
    var packageName = sbn.getPackageName();
    if (!packageName.startsWith("com.kakao.tal")) return;
    var actions = sbn.getNotification().actions;
    if (actions == null) return;
    var userId = sbn.getUser().hashCode();
    for (var n = 0; n < actions.length; n++) {
        var action = actions[n];
        if (action.getRemoteInputs() == null) continue;
        var bundle = sbn.getNotification().extras;
        var userId2 = bundle.get("android.messages")[0].get("sender_person").key;
        var roomId = sbn.getNotification().shortcutId;
        var userId3 = java.lang.String(userId2 + roomId).hashCode();
        var msg = bundle.get("android.text").toString();
        var sender = bundle.getString("android.title");
        var room = bundle.getString("android.subText");
        if (room == null) room = bundle.getString("android.summaryText");
        var isGroupChat = room != null;
        if (room == null) room = sender;
        var replier = new com.xfl.msgbot.script.api.legacy.SessionCacheReplier(packageName, action, room, false, "");
        var icon = bundle.getParcelableArray("android.messages")[0].get("sender_person").getIcon().getBitmap();
        var image = bundle.getBundle("android.wearable.EXTENSIONS");
        if (image != null) image = image.getParcelable("background");
        var imageDB = new com.xfl.msgbot.script.api.legacy.ImageDB(icon, image);
        com.xfl.msgbot.application.service.NotificationListener.Companion.setSession(packageName, room, action);
        if (this.hasOwnProperty("responseFix")) {
            responseFix(room, msg, sender, isGroupChat, replier, imageDB, packageName, userId != 0, userId2, roomId, userId3);
        }
    }
  }
